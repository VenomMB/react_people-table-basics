{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","Loader","PersonLink","person","currentUser","useParams","slug","name","sex","born","died","fatherName","motherName","mother","father","classNames","to","PeopleTable","people","isLoading","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","toFindParents","personName","find","PeoplePage","useState","setPeople","error","setError","setIsLoading","hasNoPeople","setHasNoPeople","showPeople","getPeopleFromServer","useCallback","allPeople","peopleWithParents","length","useEffect","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.195c820d.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { FC, memo } from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = memo(({ person }) => {\n  const { slug: currentUser } = useParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === currentUser,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`../${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {\n        mother ? (\n          <td>\n            <NavLink\n              to={`../${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </NavLink>\n          </td>\n        )\n          : (\n            <td>{motherName || '-'}</td>\n          )\n      }\n\n      {\n        father ? (\n          <td>\n            <NavLink\n              to={`../${father.slug}`}\n            >\n              {fatherName}\n            </NavLink>\n          </td>\n        )\n          : (\n            <td>{fatherName || '-'}</td>\n          )\n      }\n    </tr>\n  );\n});\n","import { FC, memo } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[];\n  isLoading: boolean;\n}\n\nexport const PeopleTable: FC<Props> = memo(({\n  people,\n  isLoading,\n}) => (\n  <div className=\"container\">\n    <div className=\"block\">\n      <div className=\"box table-container\">\n\n        {\n          isLoading\n            ? <Loader />\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(person => (\n                    <PersonLink person={person} />\n                  ))}\n                </tbody>\n              </table>\n            )\n        }\n      </div>\n    </div>\n  </div>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nconst toFindParents = (people: Person[], personName: string | null) => {\n  const personParent = people.find(({ name }) => name === personName);\n\n  return personParent;\n};\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasNoPeople, setHasNoPeople] = useState(false);\n\n  const showPeople = !hasNoPeople && !error;\n\n  const getPeopleFromServer = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const allPeople = await getPeople();\n      const peopleWithParents = allPeople.map((person) => {\n        return (\n          {\n            ...person,\n            mother: toFindParents(allPeople, person.motherName),\n            father: toFindParents(allPeople, person.fatherName),\n          }\n        );\n      });\n\n      if (allPeople.length) {\n        setIsLoading(false);\n        setPeople(peopleWithParents);\n      } else {\n        setHasNoPeople(true);\n      }\n    } catch {\n      setError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {hasNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {showPeople && (\n        <PeopleTable\n          people={people}\n          isLoading={isLoading}\n        />\n      )}\n    </>\n  );\n});\n","import { FC, memo } from 'react';\n\nexport const NotFoundPage: FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import classNames from 'classnames';\nimport { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import { FC, memo } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: FC = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n));\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}